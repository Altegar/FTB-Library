plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

loom {
    // accessWidener(file("src/main/resources/ftbguilib.accessWidener"))
    silentMojangMappingsLicense()
}

configurations {
    shadow
}

architectury {
    platformSetupLoomIde()
}

dependencies {
    minecraft("com.mojang:minecraft:${rootProject.architect.minecraft}")
    mappings(minecraft.officialMojangMappings())
    modCompile("net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}")
    modCompile("net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}")
    modCompileOnly("io.github.prospector:modmenu:${rootProject.mod_menu_version}")

    compileOnly(project(path: ":common")) {
        transitive = false
    }
    runtimeOnly(project(path: ":common", configuration: "transformed")) {
        transitive = false
    }
    shadow(project(path: ":common", configuration: "transformed")) {
        transitive = false
    }
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
    inputs.property "version", project.version
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archiveFile)
    archiveClassifier = "fabric"
}