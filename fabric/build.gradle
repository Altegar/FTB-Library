plugins {
	id "com.github.johnrengelman.shadow" version "5.0.0"
}

configurations {
	shadow
}

architectury {
	platformSetupLoomIde()
}

minecraft {
	accessWidener = file("src/main/resources/ftbguilibrary.accesswidener")
}

dependencies {
	minecraft("com.mojang:minecraft:${rootProject.architect.minecraft}")
	mappings(minecraft.officialMojangMappings())
	modCompile("net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}")
	modCompile("net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}")
	modCompileOnly("io.github.prospector:modmenu:${rootProject.mod_menu_version}")
	modCompile "me.shedaniel:architectury:${rootProject.architectury_version}:fabric"

	modImplementation("me.shedaniel:RoughlyEnoughItems-api:${rootProject.rei_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modRuntime("me.shedaniel:RoughlyEnoughItems:${rootProject.rei_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	compileOnly(project(path: ":common")) {
		transitive = false
	}
	runtimeOnly(project(path: ":common", configuration: "transformed")) {
		transitive = false
	}
	shadow(project(path: ":common", configuration: "transformed")) {
		transitive = false
	}
}

processResources {
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
	inputs.property "version", project.version
}

shadowJar {
	configurations = [project.configurations.shadow]
	classifier "shadow"
}

remapJar {
	dependsOn(shadowJar)
	input.set(shadowJar.archiveFile)
	archiveClassifier = "fabric"
}